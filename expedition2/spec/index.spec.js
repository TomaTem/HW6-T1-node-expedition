const {
  getRightRovers,
  getAllRover,
  getRightDoc,
  getRightCaptain,
  getRightEngineer,
  getInterstellarRockets,
  getRightRocket,
} = require("../src/functions");

describe("Экспедиция на Луну", () => {
  describe("Отбор кандидатов", () => {
    let crew;
    beforeEach(() => {
      crew = {
        1: {
          Имя: "Нил Армстронг",
          "пол (м/ж)": "м",
          Должность: "Капитан",
          Стаж: "12",
        },
        2: {
          Имя: "Роберта Бондар",
          "пол (м/ж)": "ж",
          Должность: "Капитан",
          Стаж: "19",
        },
        3: {
          Имя: "Пит Конрад",
          "пол (м/ж)": "м",
          Должность: "Бортмеханик",
          Стаж: "11",
        },
        4: {
          Имя: "Алан Бин",
          "пол (м/ж)": "м",
          Должность: "Врач",
          Стаж: "23",
        },
        5: {
          Имя: "Хейли Арсено",
          "пол (м/ж)": "ж",
          Должность: "Врач",
          Стаж: "5",
        },
        6: {
          Имя: "Том Браун",
          "пол (м/ж)": "м",
          Должность: "Врач",
          Стаж: "14",
        },
        7: {
          Имя: "Джуди Лестер",
          "пол (м/ж)": "ж",
          Должность: "Бортмеханик",
          Стаж: "16",
        },
        8: {
          Имя: "Анна Кикина",
          "пол (м/ж)": "ж",
          Должность: "Бортмеханик",
          Стаж: "21",
        },
      };
    });
    it("позволяет выбрать самого опытного капитана", () => {
      const bestCaptain = getRightCaptain();
      expect(bestCaptain).toStrictEqual(crew["2"]);
    });
    it("позволяет выбрать самого опытного бортмеханика среди женщин", () => {
      const bestDoctor = getRightEngineer();
      expect(bestDoctor).toEqual(crew["8"]);
    });
    it("позволяет выбрать всех врачей с опытом работы больше 5 лет", () => {
      const allEngineer = getRightDoc();
      expect(allEngineer).toEqual([crew["4"], crew["6"]]);
    });
  });
  describe("Отбор оборудования", () => {
    let equipment;
    beforeEach(() => {
      equipment = {
        1: {
          "Название оборудования": "Исследователь-2",
          "Тип оборудования": "марсоход",
          "Предполагаемый срок службы (в годах)": "3",
        },
        2: {
          "Название оборудования": "Луна-10",
          "Тип оборудования": "луноход",
          "Предполагаемый срок службы (в годах)": "15",
        },
        3: {
          "Название оборудования": "Смарт-1",
          "Тип оборудования": "луноход",
          "Предполагаемый срок службы (в годах)": "4",
        },
        4: {
          "Название оборудования": "Искатель-1",
          "Тип оборудования": "марсоход",
          "Предполагаемый срок службы (в годах)": "5",
        },
        5: {
          "Название оборудования": "Эксплорер-35",
          "Тип оборудования": "луноход",
          "Предполагаемый срок службы (в годах)": "10",
        },
      };
    });
    it("Позволяет отобрать все луноходы", () => {
      const allRover = getAllRover();
      expect(allRover).toEqual([
        equipment["2"],
        equipment["3"],
        equipment["5"],
      ]);
    });
    it("позволяет выбрать только те луноходы, которые смогут прослужить больше 7 лет", () => {
      const rightRovers = getRightRovers();
      expect(rightRovers).toEqual([equipment["2"], equipment["5"]]);
    });
  });
  describe("Выбор ракеты", () => {
    let rockets;
    beforeEach(() => {
      rockets = {
        1: {
          "Название ракеты": "Аполон-15",
          "тип ракеты": "орбитальная",
          "дальность полета (тыс. км.)": "28",
        },
        2: {
          "Название ракеты": "Сатурн-5",
          "тип ракеты": "межзвездная",
          "дальность полета (тыс. км.)": "8901",
        },
        3: {
          "Название ракеты": "Falcon 9",
          "тип ракеты": "межзвездная",
          "дальность полета (тыс. км.)": "658421",
        },
      };
    });
    it("позволяет отобрать все межзвездные ракеты", () => {
      const rocket = getInterstellarRockets();
      expect(rocket).toEqual([rockets["2"], rockets["3"]]);
    });
    it("позволяет выбрать ракету с максимальной дальностью полёта", () => {
      const rocket = getRightRocket();
      expect(rocket).toStrictEqual(rockets["3"]);
    });
  });
});
